# SPDX-License-Identifier: MIT
# Model Selection Configuration

menu "Model Selection"

# Model mode selection
choice
	prompt "Model Selection Mode"
	default MODEL_MODE_SINGLE
	help
	  Select how to configure models:
	  - Single: Train one specific model
	  - Multiple: Enable multiple models for evaluation

config MODEL_MODE_SINGLE
	bool "Single model"
	help
	  Select and train a single model.

config MODEL_MODE_MULTIPLE
	bool "Multiple models (evaluation mode)"
	help
	  Enable multiple models for comparison and evaluation.

endchoice

# Single model selection
if MODEL_MODE_SINGLE

choice
	prompt "Select model"
	default MODEL_SELECT_LENET5
	help
	  Select which model to train.

config MODEL_SELECT_LENET5
	bool "LeNet-5"
	help
	  LeNet-5 convolutional neural network for MNIST digit classification.
	  Small model suitable for testing and development.
	  Parameters: ~60K

config MODEL_SELECT_RESNET18
	bool "ResNet-18"
	help
	  ResNet-18 for CIFAR-10/100 classification.
	  Modern architecture with skip connections.
	  Parameters: ~11M

config MODEL_SELECT_RESNET50
	bool "ResNet-50"
	help
	  ResNet-50 for ImageNet/CIFAR-100 classification.
	  Deeper architecture with bottleneck blocks.
	  Parameters: ~25.6M

config MODEL_SELECT_GPT2
	bool "GPT-2"
	help
	  GPT-2 transformer language model.
	  Autoregressive language modeling on text datasets.
	  Parameters: 124M (default GPT-2 size)

endchoice

endif # MODEL_MODE_SINGLE

# Multiple model selection
if MODEL_MODE_MULTIPLE

comment "Select models to enable"

config MODEL_ENABLE_LENET5
	bool "Enable LeNet-5"
	default y
	help
	  Include LeNet-5 in evaluation.

config MODEL_ENABLE_RESNET18
	bool "Enable ResNet-18"
	default y
	help
	  Include ResNet-18 in evaluation.

config MODEL_ENABLE_RESNET50
	bool "Enable ResNet-50"
	default n
	help
	  Include ResNet-50 in evaluation.

config MODEL_ENABLE_GPT2
	bool "Enable GPT-2"
	default n
	help
	  Include GPT-2 in evaluation.

endif # MODEL_MODE_MULTIPLE

# Namespace configuration for enabled models
config MODEL_LENET5
	bool
	default y if MODEL_MODE_SINGLE && MODEL_SELECT_LENET5
	default y if MODEL_MODE_MULTIPLE && MODEL_ENABLE_LENET5
	default n

config MODEL_RESNET18
	bool
	default y if MODEL_MODE_SINGLE && MODEL_SELECT_RESNET18
	default y if MODEL_MODE_MULTIPLE && MODEL_ENABLE_RESNET18
	default n

config MODEL_RESNET50
	bool
	default y if MODEL_MODE_SINGLE && MODEL_SELECT_RESNET50
	default y if MODEL_MODE_MULTIPLE && MODEL_ENABLE_RESNET50
	default n

config MODEL_GPT2
	bool
	default y if MODEL_MODE_SINGLE && MODEL_SELECT_GPT2
	default y if MODEL_MODE_MULTIPLE && MODEL_ENABLE_GPT2
	default n

# Default model string
config MODEL
	string
	default "lenet5" if MODEL_MODE_SINGLE && MODEL_SELECT_LENET5
	default "resnet18" if MODEL_MODE_SINGLE && MODEL_SELECT_RESNET18
	default "resnet50" if MODEL_MODE_SINGLE && MODEL_SELECT_RESNET50
	default "gpt2" if MODEL_MODE_SINGLE && MODEL_SELECT_GPT2
	default "lenet5" if MODEL_MODE_MULTIPLE

# Test matrix model configuration (for backward compatibility)
config TEST_MODEL_LENET5
	bool
	default y if MODEL_LENET5 && MODEL_MODE_MULTIPLE
	default n

config TEST_MODEL_RESNET18
	bool
	default y if MODEL_RESNET18 && MODEL_MODE_MULTIPLE
	default n

config TEST_MODEL_GPT2
	bool
	default y if MODEL_GPT2 && MODEL_MODE_MULTIPLE
	default n

config TEST_MODELS
	string
	default "lenet5,resnet18,gpt2" if TEST_MODEL_LENET5 && TEST_MODEL_RESNET18 && TEST_MODEL_GPT2
	default "lenet5,resnet18" if TEST_MODEL_LENET5 && TEST_MODEL_RESNET18 && !TEST_MODEL_GPT2
	default "lenet5,gpt2" if TEST_MODEL_LENET5 && !TEST_MODEL_RESNET18 && TEST_MODEL_GPT2
	default "resnet18,gpt2" if !TEST_MODEL_LENET5 && TEST_MODEL_RESNET18 && TEST_MODEL_GPT2
	default "lenet5" if TEST_MODEL_LENET5 && !TEST_MODEL_RESNET18 && !TEST_MODEL_GPT2
	default "resnet18" if !TEST_MODEL_LENET5 && TEST_MODEL_RESNET18 && !TEST_MODEL_GPT2
	default "gpt2" if !TEST_MODEL_LENET5 && !TEST_MODEL_RESNET18 && TEST_MODEL_GPT2
	default "gpt2" if MODEL_MODE_SINGLE && MODEL_SELECT_GPT2
	default "lenet5"

# Model-specific configurations
if MODEL_LENET5 || TEST_MODEL_LENET5
source "lenet5/Kconfig"
endif

if MODEL_RESNET18 || TEST_MODEL_RESNET18
source "resnet18/Kconfig"
endif

if MODEL_RESNET50
source "resnet50/Kconfig"
endif

if MODEL_GPT2 || TEST_MODEL_GPT2
source "gpt2/Kconfig"
endif

endmenu
